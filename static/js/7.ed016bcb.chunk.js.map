{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","sauces","breadTypes","ingredientName","push","name","amount","saucesName","breadTypesName","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","sauceOutput","su","breadTypeOutput","bd","className","classes","Order","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,qFCsFXC,EAnFD,SAAAC,GACZ,IAAMC,EAAc,GACdC,EAAS,GACTC,EAAa,GAEnB,IAAK,IAAIC,KAAkBJ,EAAMC,YAC/BA,EAAYI,KAAK,CACfC,KAAMF,EACNG,OAAQP,EAAMC,YAAYG,KAI9B,IAAK,IAAII,KAAcR,EAAME,OAC3BA,EAAOG,KAAK,CACVC,KAAME,EACND,OAAQP,EAAME,OAAOM,KAIzB,IAAK,IAAIC,KAAkBT,EAAMG,WAC/BA,EAAWE,KAAK,CACdC,KAAMG,EACNF,OAAQP,EAAMG,WAAWM,KAG7B,IAAMC,EAAmBT,EAAYU,KAAI,SAAAC,GACvC,OACE,0BACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGN,MAEPM,EAAGN,KAVN,KAUcM,EAAGL,OAVjB,QAcEa,EAAclB,EAAOS,KAAI,SAAAU,GAC7B,OACE,0BACER,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKE,EAAGf,MAEPe,EAAGf,KAVN,KAUce,EAAGd,OAVjB,QAcEe,EAAkBnB,EAAWQ,KAAI,SAAAY,GACrC,OACE,0BACEV,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKI,EAAGjB,MAEPiB,EAAGjB,KAVN,KAUciB,EAAGhB,OAVjB,QAeJ,OACE,yBAAKiB,UAAWC,IAAQC,OACtB,yCAAehB,GACf,oCAAUU,GACV,yCAAeE,K,wCCrCNK,uBAfS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAM7B,MAAM8B,OACpBC,QAASF,EAAM7B,MAAM+B,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAAAC,GACzB,MAAO,CACLC,cAAe,SAAAJ,GAAK,OAAIG,EAASE,IAAoBL,QAI1CJ,CAGbU,aAxCa,SAAArC,GAAU,IACfmC,EAAkBnC,EAAlBmC,cAERG,qBAAU,WACRtC,EAAMmC,cAAcnC,EAAM+B,SACzB,CAACI,IAEJ,IAAIN,EAAS,kBAACU,EAAA,EAAD,MAYb,OAXKvC,EAAM8B,SAAW9B,EAAM6B,SAC1BA,EAAS7B,EAAM6B,OAAOlB,KAAI,SAAAZ,GAAK,OAC7B,kBAAC2B,EAAD,CACEP,IAAKpB,EAAMyC,GACXvC,YAAaF,EAAME,YACnBC,OAAQH,EAAMG,OACdC,WAAYJ,EAAMI,WAClBqC,GAAIzC,EAAMyC,SAIT,6BAAMX,KAqBYY","file":"static/js/7.ed016bcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1yKIl\"};","import React from \"react\";\r\n\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = props => {\r\n  const ingredients = [];\r\n  const sauces = [];\r\n  const breadTypes = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n\r\n  for (let saucesName in props.sauces) {\r\n    sauces.push({\r\n      name: saucesName,\r\n      amount: props.sauces[saucesName]\r\n    });\r\n  }\r\n\r\n  for (let breadTypesName in props.breadTypes) {\r\n    breadTypes.push({\r\n      name: breadTypesName,\r\n      amount: props.breadTypes[breadTypesName]\r\n    });\r\n  }\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\"\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  const sauceOutput = sauces.map(su => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\"\r\n        }}\r\n        key={su.name}\r\n      >\r\n        {su.name} ({su.amount})\r\n      </span>\r\n    );\r\n  });\r\n  const breadTypeOutput = breadTypes.map(bd => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\"\r\n        }}\r\n        key={bd.name}\r\n      >\r\n        {bd.name} ({bd.amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Skladniki: {ingredientOutput}</p>\r\n      <p>Sosy: {sauceOutput}</p>\r\n      <p>Pieczywko: {breadTypeOutput}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"axios\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nconst Orders = props => {\r\n  const { onFetchOrders } = props;\r\n\r\n  useEffect(() => {\r\n    props.onFetchOrders(props.token);\r\n  }, [onFetchOrders]);\r\n\r\n  let orders = <Spinner />;\r\n  if (!props.loading && props.orders) {\r\n    orders = props.orders.map(order => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        sauces={order.sauces}\r\n        breadTypes={order.breadTypes}\r\n        id={order.id}\r\n      />\r\n    ));\r\n  }\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: token => dispatch(actions.fetchOrders(token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}