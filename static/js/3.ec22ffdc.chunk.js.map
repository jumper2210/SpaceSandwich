{"version":3,"sources":["components/UI/Button/Button.module.css","components/Sandwich/OrderBox/Summary/Summary.module.css","containers/Checkout/Contact/Contact.module.css","components/UI/Button/Button.js","components/Sandwich/OrderBox/Summary/Summary.js","containers/Checkout/Contact/Contact.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["module","exports","button","props","className","classes","Button","btnType","join","onClick","clicked","children","checkoutSummary","CheckoutSummary","Sandwich","SandwichCheck","breadTypes","ingredients","sauces","checkoutCancelled","checkoutContinued","connect","state","sandwichBuilder","loading","order","token","auth","userId","dispatch","onOrderSandwich","orderData","actions","withErrorHandler","useState","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","city","deliveryMethod","options","displayValue","orderForm","setOrderForm","formIsValid","setFormIsValid","formElementsArray","key","push","id","config","form","onSubmit","event","preventDefault","formData","formElementIdentifier","map","formElement","Input","invalid","shouldValidate","changed","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","inputChangedHandler","ContactBtn","disabled","Spinner","ContactData","ContactInformation","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","Summary","this","path","match","render","Contact","price","Component","totalPrice","purchased","input","inputElement","inputClasses","InputElement","Invalid","onChange","option","Label","label"],"mappings":"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","file":"static/js/3.ec22ffdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3eQRV\",\"Success\":\"Button_Success__1HvO5\",\"Danger\":\"Button_Danger__3ipbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"Summary_CheckoutSummary__Y0KZ-\",\"Sandwich\":\"Summary_Sandwich__24zND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"Contact_ContactData__k_6OC\",\"ContactBtn\":\"Contact_ContactBtn__2kEHT\",\"ContactInformation\":\"Contact_ContactInformation__QBekF\"};","import React from \"react\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = props => (\r\n  <button\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default button;\r\n","import React from \"react\";\r\n\r\nimport SandwichCheck from \"../../../Sandwich/SandwichCheck/SandwichCheck\";\r\nimport Button from \"../../../UI/Button/Button\";\r\nimport classes from \"./Summary.module.css\";\r\n\r\nconst checkoutSummary = props => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div className={classes.Sandwich}>\r\n        <SandwichCheck\r\n          breadTypes={props.breadTypes}\r\n          ingredients={props.ingredients}\r\n          sauces={props.sauces}\r\n        />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        Anuluj\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        Kontynuj\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { useState } from \"react\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./Contact.module.css\";\r\nimport axios from \"../../../axios-service\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { updateObject, checkValidity } from \"../../../store/utility\";\r\n\r\nconst ContactData = props => {\r\n  const [orderForm, setOrderForm] = useState({\r\n    name: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Name\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    street: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Street\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    zipCode: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"ZIP_Code\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 5,\r\n        isNumeric: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    city: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"City\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n\r\n    deliveryMethod: {\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        options: [\r\n          { value: \"fastest\", displayValue: \"SpaceSpeed\" },\r\n          { value: \"cheapest\", displayValue: \"Cheap\" }\r\n        ]\r\n      },\r\n      value: \"\",\r\n      validation: {},\r\n      valid: true\r\n    }\r\n  });\r\n\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const orderHandler = event => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementIdentifier in orderForm) {\r\n      formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: props.ingredients,\r\n      breadTypes: props.breadTypes,\r\n      sauces: props.sauces,\r\n      userId: props.userId,\r\n      orderData: formData\r\n    };\r\n\r\n    props.onOrderSandwich(order, props.token);\r\n  };\r\n\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(orderForm[inputIdentifier], {\r\n      value: event.target.value,\r\n      valid: checkValidity(\r\n        event.target.value,\r\n        orderForm[inputIdentifier].validation\r\n      ),\r\n      touched: true\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(orderForm, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    setOrderForm(updatedOrderForm);\r\n    setFormIsValid(formIsValid);\r\n  };\r\n\r\n  const formElementsArray = [];\r\n  for (let key in orderForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: orderForm[key]\r\n    });\r\n  }\r\n  let form = (\r\n    <form onSubmit={orderHandler}>\r\n      {formElementsArray.map(formElement => (\r\n        <Input\r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={event => inputChangedHandler(event, formElement.id)}\r\n        />\r\n      ))}\r\n      <button className={classes.ContactBtn} disabled={!formIsValid}>\r\n        Wyslij do potwierdzenia\r\n      </button>\r\n    </form>\r\n  );\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n  return (\r\n    <div className={classes.ContactData}>\r\n      <p className={classes.ContactInformation}>\r\n        Na koniec, wprowadz swoje dane\r\n      </p>\r\n      {form}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.sandwichBuilder.ingredients,\r\n    sauces: state.sandwichBuilder.sauces,\r\n    breadTypes: state.sandwichBuilder.breadTypes,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderSandwich: (orderData, token) =>\r\n      dispatch(actions.purchaseSandwich(orderData, token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Summary from \"../../components/Sandwich/OrderBox/Summary/Summary\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Summary\r\n          breadTypes={this.props.breadTypes}\r\n          ingredients={this.props.ingredients}\r\n          sauces={this.props.sauces}\r\n          checkoutCancelled={this.checkoutCancelledHandler}\r\n          checkoutContinued={this.checkoutContinuedHandler}\r\n        />\r\n        <Route\r\n          path={this.props.match.path + \"/contact\"}\r\n          render={props => (\r\n            <Contact\r\n              ingredients={this.props.ingredients}\r\n              breadTypes={this.props.breadTypes}\r\n              sauces={this.props.sauces}\r\n              price={this.props.price}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.sandwichBuilder.ingredients,\r\n    breadTypes: state.sandwichBuilder.breadTypes,\r\n    sauces: state.sandwichBuilder.sauces,\r\n    price: state.sandwichBuilder.totalPrice,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__WfKYm\",\"Label\":\"Input_Label__KRHTq\",\"InputElement\":\"Input_InputElement__tDuO3\",\"Invalid\":\"Input_Invalid__3Af-p\"};"],"sourceRoot":""}